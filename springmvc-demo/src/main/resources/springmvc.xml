<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!--开启controller扫描-->
    <context:component-scan base-package="com.lagou.edu.controller"></context:component-scan>


    <!--配置SpringMVC的视图解析器-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/jsp/"></property>
        <property name="suffix" value=".jsp"></property>
    </bean>

    <!--自动注册最合适的处理器映射器，处理器适配器-->
    <mvc:annotation-driven></mvc:annotation-driven>

    <!--静态资源配置方案一-->
<!--原理：添加此标签之后，会在SpringMVC上下文中定义一个DefaultServletHttpRequestHandler对象
         那么这个对象如同一个检查人员，对进入DispatcherServlet的请求进行过滤，如果发现是静态资源
         那么会把请求转由tomcat默认的DefaultServlet处理，如果不是，则继续由SpringMVC框架处理

    局限性：只能将静态资源放在webapp下
         -->
    <mvc:default-servlet-handler></mvc:default-servlet-handler>


    <!--静态资源配置方案二，SpringMVC自己处理静态资源
       mapping:约定的静态资源url的规则
       location:指定静态资源的存放位置
    -->
    <!--<mvc:resources  location="classpath:/" mapping="/resources/**"></mvc:resources>
-->
</beans>