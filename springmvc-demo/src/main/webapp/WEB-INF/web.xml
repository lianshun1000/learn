<!DOCTYPE web-app PUBLIC
 "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
 "http://java.sun.com/dtd/web-app_2_3.dtd" >

<web-app>
  <display-name>Archetype Created Web Application</display-name>
  
  <servlet>
    <servlet-name>springmvc</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>classpath:springmvc.xml</param-value>
    </init-param>
  </servlet>

  <!--
  方式一：带后缀，比如：*.action  *.do
  方式二：/  不会拦截jsp，但是会拦截html等静态资源（除servlet和jsp外的js,css,png等）
         解决方案：
         原因：tomcat容器中也有一个web.xml（父），项目中也有一个web.xml（子），是继承关系。
              父web.xml中有一个DefaultServlet，url-pattern是/
              此时我们自己的web.xml里面也配置了一个/,覆盖了父web.xml的配置
              之所以不拦截.jsp是因为父web.xml中有一个JSPServlet，这个servlet是处理.jsp文件的，
              而我们并没有复写这个配置，所以springmvc不拦截.jsp，将jsp文件交给了tomcat处理
  方式三：/*，拦截所有，包括jsp
  -->
  <servlet-mapping>
    <servlet-name>springmvc</servlet-name>
    <!--拦截匹配规则的url请求，进入SpringMVC框架处理-->
    <url-pattern>/</url-pattern>
  </servlet-mapping>
</web-app>
